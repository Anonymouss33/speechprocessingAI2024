# -*- coding: utf-8 -*-
"""21104AI_speech_Lab1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sQLyhYMUXDeLRQvP-3rAZUTtSctqe-Ek
"""

from IPython.display import Audio
import matplotlib.pylab as plt
import numpy as np

import librosa

import librosa.display

y, sr = librosa.load('/content/audioai.unknown')

librosa.display.waveshow(y,sr=sr,color='red')
plt.title("Speech Signal")
plt.xlabel("Time")
plt.ylabel("Amplitude")
plt.show()

duration = librosa.get_duration(y=y, sr=sr)

print(f"signal length:{len(y)} samples")

print(f"Magnitude Range: {y.min()} to {y.max()}")

magnitude_range = y.max() - y.min()

print(f"Magnitude Range: {magnitude_range}")

print(f"Duration: {duration:.2f} seconds")

# Play the audio
Audio(y, rate=sr)

start_time=0.5
end_time=1.0

start_sample=int(start_time*sr)
end_sample = int(end_time * sr)

segment = y[start_sample:end_sample]

Audio(segment, rate=sr)

librosa.display.waveshow(segment,sr=sr)
plt.title("Speech Signal")
plt.xlabel("Time")
plt.ylabel("Amplitude")
plt.show()

print(f"signal length:{len(segment)} samples")

print(f"Magnitude Range: {segment.min()} to {segment.max()}")
magnitude_range = segment.max() - segment.min()
print(f"Magnitude Range: {magnitude_range}")

start_time1=0.5
end_time1=3.0

start_sample1=int(start_time1*sr)
end_sample1 = int(end_time1 * sr)

segment1 = y[start_sample1:end_sample1]

Audio(segment1, rate=sr)

librosa.display.waveshow(segment1,sr=sr)
plt.title("Speech Signal")
plt.xlabel("Time")
plt.ylabel("Amplitude")
plt.show()

print(f"signal length:{len(segment1)} samples")

print(f"Magnitude Range: {segment1.min()} to {segment1.max()}")
magnitude_range = segment1.max() - segment1.min()
print(f"Magnitude Range: {magnitude_range}")

start_time2=2.0
end_time2=3.0

start_sample2=int(start_time2*sr)
end_sample2=int(end_time2*sr)

segment2=y[start_sample2:end_sample2]

Audio(segment2, rate=sr)

librosa.display.waveshow(segment2,sr=sr)
plt.title("Speech Signal")
plt.xlabel("Time")
plt.ylabel("Amplitude")
plt.show()

print(f"signal length:{len(segment2)} samples")

print(f"Magnitude Range: {segment2.min()} to {segment2.max()}")
magnitude_range = segment2.max() - segment2.min()
print(f"Magnitude Range: {magnitude_range}")

start_time3=1.75
end_time3=2

start_sample3=int(start_time3*sr)
end_sample3=int(end_time3*sr)

segment3=y[start_sample3:end_sample3]

Audio(segment3, rate=sr)

abruptly_segmented_signal = np.concatenate([segment, segment2])

print("Original Signal:")
Audio(y, rate=sr)

print("Abruptly Segmented Signal:")
Audio(abruptly_segmented_signal, rate=sr)

librosa.display.waveshow(abruptly_segmented_signal,sr=sr)
plt.title("Speech Signal")
plt.xlabel("Time")
plt.ylabel("Amplitude")
plt.show()

abruptly_segmented_signal1 = np.concatenate([segment2, segment3])

print("Original Signal:")
Audio(y, rate=sr)

print("Abruptly Segmented Signal1:")
Audio(abruptly_segmented_signal1, rate=sr)



librosa.display.waveshow(abruptly_segmented_signal1,sr=sr)
plt.title("Speech Signal")
plt.xlabel("Time")
plt.ylabel("Amplitude")
plt.show()